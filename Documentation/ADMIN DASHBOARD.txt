# BettorOdds Admin Dashboard Specification

## Overview
The BettorOdds Admin Dashboard provides comprehensive management tools for platform administrators. It enables monitoring, user management, bet oversight, and system configuration.

## User Roles

### Super Admin
- Full system access
- Manage other admins
- Access to all features
- System configuration

### Manager
- User management
- Bet management
- Transaction oversight
- Analytics access

### Support
- View user details
- Handle basic support
- View transactions
- Limited modifications

## Core Features

### 1. Dashboard Overview
- Active users count
- Daily betting volume
- Revenue metrics
- System status
- Recent activity feed

### 2. User Management
- User list with filters
- User details view
- Account actions
  - Suspend/activate
  - Reset password
  - Modify limits
  - View betting history
- KYC verification status
- Account balance management

### 3. Betting Management
- Active bets monitor
- Bet history
- Manual bet resolution
- Odds management
- Risk analysis
- Limit management

### 4. Transaction Monitor
- Real-time transaction feed
- Transaction history
- Payment processing
- Withdrawal approval
- Transaction search
- Export functionality

### 5. System Configuration
- Daily betting limits
- Odds update frequency
- Email templates
- System parameters
- Feature toggles
- API configurations

### 6. Analytics & Reporting
- User statistics
- Betting patterns
- Revenue reports
- Risk analysis
- Custom report builder
- Export capabilities

## Technical Implementation

### 1. Database Updates
```typescript
// New Admin Users Collection
admins/{adminId} {
    id: string
    email: string
    role: string // "super_admin" | "manager" | "support"
    permissions: string[]
    createdAt: timestamp
    lastLogin: timestamp
    status: string
    createdBy: string
    actions: {
        canManageUsers: boolean
        canManageBets: boolean
        canManageAdmins: boolean
        canConfigureSystem: boolean
    }
}

// Admin Activity Log
admin_logs/{logId} {
    id: string
    adminId: string
    action: string
    details: object
    timestamp: timestamp
    targetResource: string
    targetId: string
    status: string
}

// System Configuration
settings/admin_config {
    dailyLimits: {
        green: number
        yellow: number
    }
    oddsUpdateFrequency: number
    maintenanceMode: boolean
    requireEmailVerification: boolean
    minimumBetAmount: number
    maximumBetAmount: number
    supportEmail: string
    apiKeys: {
        oddsApi: string
        other: string
    }
}
```

### 2. Security Rules
```javascript
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Admin access rules
    match /admins/{adminId} {
      allow read: if isAdmin();
      allow write: if isSuperAdmin();
    }
    
    match /admin_logs/{logId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // Helper functions
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'super_admin';
    }
  }
}
```

## User Interface Flows

### 1. Authentication Flow
1. Admin login page
2. 2FA verification
3. Role-based redirect
4. Session management

### 2. Main Navigation
- Dashboard
- Users
- Bets
- Transactions
- Settings
- Analytics
- Logs

### 3. Key Actions
- User management actions
- Bet resolution
- Transaction approval
- System configuration
- Report generation

## Implementation Phases

### Phase 1: Foundation
- Admin authentication
- Basic dashboard
- User management
- Database updates

### Phase 2: Core Features
- Betting management
- Transaction monitoring
- Basic reporting
- System settings

### Phase 3: Advanced Features
- Advanced analytics
- Custom reporting
- Automated monitoring
- API management

### Phase 4: Enhancement
- Mobile admin interface
- Advanced security
- Performance optimization
- Additional analytics

## Security Considerations

### Authentication
- Strong password requirements
- 2FA mandatory for admins
- Session management
- IP restrictions

### Authorization
- Role-based access control
- Action logging
- Resource-level permissions
- Data access controls

### Monitoring
- Activity logging
- Security alerts
- Access attempts
- System changes

## Next Steps

1. Database Implementation
   - Create new collections
   - Update security rules
   - Migrate existing data

2. Admin Interface
   - Set up admin authentication
   - Create basic dashboard
   - Implement user management

3. Security Setup
   - Configure 2FA
   - Set up logging
   - Implement RBAC

Would you like to proceed with implementation?
